kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: openebs-lvm-controller
  namespace: {{ .Release.Namespace }}
  labels:
    openebs.io/component-name: openebs-lvm-controller
    openebs.io/version: 0.8.2
spec:
  selector:
    matchLabels:
      app: openebs-lvm-controller
      role: openebs-lvm
  serviceName: "openebs-lvm"
  replicas: {{ .Values.provisioner.replicaCount }}
  template:
    metadata:
      labels:
        app: openebs-lvm-controller
        role: openebs-lvm
        openebs.io/component-name: openebs-lvm-controller
        openebs.io/version: 0.8.2
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - openebs-lvm-controller
            topologyKey: "kubernetes.io/hostname"
      priorityClassName: {{ .Values.provisioner.priorityClassName }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: openebs-lvm-controller-sa
      containers:
        - name: {{ .Values.provisioner.resizer.name }}
          image: "{{ .Values.provisioner.resizer.image.repository }}:{{ .Values.provisioner.resizer.image.tag }}"
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: {{.Values.provisioner.resizer.image.pullPolicy}}
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
{{ toYaml .Values.nodeplugin.registrar.resources | indent 12 }}
        - name: {{ .Values.provisioner.snapshotter.name }}
          image: "{{ .Values.provisioner.snapshotter.image.repository }}:{{ .Values.provisioner.snapshotter.image.tag }}"
          imagePullPolicy: {{.Values.provisioner.snapshotter.image.pullPolicy}}
          args:
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
{{ toYaml .Values.nodeplugin.registrar.resources | indent 12 }}
        - name: {{ .Values.provisioner.controller.name }}
          image: "{{ .Values.provisioner.controller.image.repository }}:{{ .Values.provisioner.controller.image.tag }}"
          args:
            - "--v=5"
            - "--leader-election=true"
          imagePullPolicy: {{.Values.provisioner.controller.image.pullPolicy}}
          resources:
{{ toYaml .Values.nodeplugin.registrar.resources | indent 12 }}
        - name: {{ .Values.provisioner.provisioner.name }}
          image: "{{ .Values.provisioner.provisioner.image.repository }}:{{ .Values.provisioner.provisioner.image.tag }}"
          imagePullPolicy: {{.Values.provisioner.provisioner.image.pullPolicy}}
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--feature-gates=Topology=true"
            - "--strict-topology"
            - "--leader-election"
            - "--extra-create-metadata=true"
            - "--enable-capacity=true"
            - "--default-fstype=ext4"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
{{ toYaml .Values.nodeplugin.registrar.resources | indent 12 }}
        - name: {{ .Values.nodeplugin.plugin.name }}
          image: "{{ .Values.nodeplugin.plugin.image.repository }}:{{ .Values.nodeplugin.plugin.image.tag }}"
          imagePullPolicy: {{ .Values.nodeplugin.plugin.image.pullPolicy }}
          env:
            - name: OPENEBS_CONTROLLER_DRIVER
              value: controller
            - name: OPENEBS_CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: LVM_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: OPENEBS_IO_INSTALLER_TYPE
              value: "lvm-operator"
            - name: OPENEBS_IO_ENABLE_ANALYTICS
              value: "true"
          args :
            - "--endpoint=$(OPENEBS_CSI_ENDPOINT)"
            - "--plugin=$(OPENEBS_CONTROLLER_DRIVER)"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
          resources:
{{ toYaml .Values.nodeplugin.registrar.resources | indent 12 }}
      volumes:
        - name: socket-dir
          emptyDir: {}