---

- import_tasks: init-namespaces.yaml

- name: 创建 OpenPitrix values 目录
  file:
    name: /etc/kubernetes/plugins/common
    state: directory
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: KubeSphere | Getting Kubernetes master num
  shell: >
    kubectl get node | awk '{if(NR>1){print $3}}' | grep master | wc -l
  register: masters
  failed_when: false
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: KubeSphere | Setting master num
  set_fact:
    enableHA: >-
      {% if masters is defined and masters.stdout is defined and masters.stdout != "0" and masters.stdout != "1" %}true{% else %}false{% endif %}
  when:
    - enableHA is not defined
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: KubeSphere | Getting common component installation files
  copy:
    src: "{{ item }}"
    dest: "{{ helm_charts_dir }}/"
  loop:
    - "common"
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: KubeSphere | Deploying snapshot controller
  block:
    - name: KubeSphere | Getting common component installation files
      copy:
        src: "{{ item }}"
        dest: "{{ helm_charts_dir }}/"
      loop:
        - "snapshot-controller"

    - name: KubeSphere | Creating snapshot controller values
      template:
        src: "custom-values-snapshot-controller.yaml.j2"
        dest: "/etc/kubernetes/plugins/common/custom-values-snapshot-controller.yaml"

    - name: KubeSphere | Updating snapshot crd
      command: >
        kubectl apply -f {{ helm_charts_dir }}/snapshot-controller/crds/snapshot.storage.k8s.io_volumesnapshot.yaml --force
      failed_when: false

    - name: KubeSphere | Deploying snapshot controller
      shell: >
        helm upgrade --install snapshot-controller
        {{ helm_charts_dir }}/snapshot-controller
        -f /etc/kubernetes/plugins/common/custom-values-snapshot-controller.yaml
        --namespace kube-system
      failed_when: false
  delegate_to: "{{ groups['kube-master'][0] }}"

- name: KubeSphere | Creating common component manifests
  template:
    src: "redis.yaml.j2"
    dest: "/etc/kubernetes/plugins/common/redis.yaml"
  delegate_to: "{{ groups['kube-master'][0] }}"

- import_tasks: common-install.yaml
  delegate_to: "{{ groups['kube-master'][0] }}"
